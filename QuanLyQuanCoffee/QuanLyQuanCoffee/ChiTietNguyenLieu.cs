//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyQuanCoffee
{
    using System;
    using System.Collections.Generic;
    
    public partial class ChiTietNguyenLieu : IComparable<ChiTietNguyenLieu>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ChiTietNguyenLieu()
        {
            this.ChiTietPhieuNhaps = new HashSet<ChiTietPhieuNhap>();
            this.ChiTietPhieuXuats = new HashSet<ChiTietPhieuXuat>();
        }
    
        public string maChiTietNguyenLieu { get; set; }
        public string maNguyenLieu { get; set; }
        public Nullable<int> soLuong { get; set; }
        public Nullable<System.DateTime> ngayHetHan { get; set; }
        public string donViTinh { get; set; }
    
        public virtual NguyenLieu NguyenLieu { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChiTietPhieuNhap> ChiTietPhieuNhaps { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChiTietPhieuXuat> ChiTietPhieuXuats { get; set; }

        public override string ToString()
        {
            return maChiTietNguyenLieu;
        }

        public int CompareTo(ChiTietNguyenLieu order)
        {
            string temp1 = this.maChiTietNguyenLieu.Substring(13);
            int thuTu1 = int.Parse(temp1);

            string temp2 = order.maChiTietNguyenLieu.Substring(13);
            int thuTu2 = int.Parse(temp2);
            if (thuTu1 > thuTu2)
            {
                return 1;
            }
            if (thuTu1 < thuTu2)
            {
                return -1;
            }
            if (thuTu1 == thuTu2)
            {
                return 0;
            }
            return this.maChiTietNguyenLieu.CompareTo(order.maChiTietNguyenLieu);
        }
    }
}
